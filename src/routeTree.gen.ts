/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as PrivateImport } from './routes/private'
import { Route as IndexImport } from './routes/index'
import { Route as PrivateHomeImport } from './routes/private/home'
import { Route as PrivateWorkspacesWorkspaceIdImport } from './routes/private/workspaces/$workspaceId'

// Create Virtual Routes

const SigninLazyImport = createFileRoute('/signin')()
const PrivateProfileLazyImport = createFileRoute('/private/profile')()

// Create/Update Routes

const SigninLazyRoute = SigninLazyImport.update({
  path: '/signin',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/signin.lazy').then((d) => d.Route))

const PrivateRoute = PrivateImport.update({
  path: '/private',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const PrivateProfileLazyRoute = PrivateProfileLazyImport.update({
  path: '/profile',
  getParentRoute: () => PrivateRoute,
} as any).lazy(() =>
  import('./routes/private/profile.lazy').then((d) => d.Route),
)

const PrivateHomeRoute = PrivateHomeImport.update({
  path: '/home',
  getParentRoute: () => PrivateRoute,
} as any)

const PrivateWorkspacesWorkspaceIdRoute =
  PrivateWorkspacesWorkspaceIdImport.update({
    path: '/workspaces/$workspaceId',
    getParentRoute: () => PrivateRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/private': {
      id: '/private'
      path: '/private'
      fullPath: '/private'
      preLoaderRoute: typeof PrivateImport
      parentRoute: typeof rootRoute
    }
    '/signin': {
      id: '/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof SigninLazyImport
      parentRoute: typeof rootRoute
    }
    '/private/home': {
      id: '/private/home'
      path: '/home'
      fullPath: '/private/home'
      preLoaderRoute: typeof PrivateHomeImport
      parentRoute: typeof PrivateImport
    }
    '/private/profile': {
      id: '/private/profile'
      path: '/profile'
      fullPath: '/private/profile'
      preLoaderRoute: typeof PrivateProfileLazyImport
      parentRoute: typeof PrivateImport
    }
    '/private/workspaces/$workspaceId': {
      id: '/private/workspaces/$workspaceId'
      path: '/workspaces/$workspaceId'
      fullPath: '/private/workspaces/$workspaceId'
      preLoaderRoute: typeof PrivateWorkspacesWorkspaceIdImport
      parentRoute: typeof PrivateImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  PrivateRoute: PrivateRoute.addChildren({
    PrivateHomeRoute,
    PrivateProfileLazyRoute,
    PrivateWorkspacesWorkspaceIdRoute,
  }),
  SigninLazyRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/private",
        "/signin"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/private": {
      "filePath": "private.tsx",
      "children": [
        "/private/home",
        "/private/profile",
        "/private/workspaces/$workspaceId"
      ]
    },
    "/signin": {
      "filePath": "signin.lazy.tsx"
    },
    "/private/home": {
      "filePath": "private/home.tsx",
      "parent": "/private"
    },
    "/private/profile": {
      "filePath": "private/profile.lazy.tsx",
      "parent": "/private"
    },
    "/private/workspaces/$workspaceId": {
      "filePath": "private/workspaces/$workspaceId.tsx",
      "parent": "/private"
    }
  }
}
ROUTE_MANIFEST_END */
